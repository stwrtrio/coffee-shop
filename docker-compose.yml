version: '3.8'

networks:
  kafka-network:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: coffee-shop-app
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - mysql
      - redis
    environment:
      - KAFKA_BROKERS=kafka:9092
      - MYSQL_DSN=root:password@tcp(mysql:3306)/coffee_shop?charset=utf8mb4&parseTime=True&loc=Local
      - REDIS_HOST=redis:6379

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    volumes:
      - kafka_data:/var/lib/kafka/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: coffee_shop
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    volumes:
      - mailhog_data:/mailhog_data


volumes:
  mysql_data:
  redis_data:
  kafka_data:
  mailhog_data:
    driver: local